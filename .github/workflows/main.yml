# 相关文档
#    了解 GitHub Action     https://docs.github.com/cn/actions/learn-github-actions/understanding-github-actions
#    搜索 GitHub Action     https://github.com/marketplace?type=actions
#    使用缓存               https://docs.github.com/cn/actions/using-workflows/caching-dependencies-to-speed-up-workflows
#
# 引用变量注意事项
#   (1) 通常情况下引用变量方式，比如run指令中
#         ${var}
#   (2) 其他情况下的引用变量方式，比如引用secret变量、给action传参等
#         ${{ env.变量名 }}
#
#  遇到的问题
#    使用SSH账号密码登录没有问题，使用密钥登录却总是报错，不知道是用法不对还是有bug
#
#  secrets设置
#    HOST                 SSH地址
#    PORT                 SSH端口
#    USERNAME             SSH用户名
#    PASSWORD             SSH密码
#
#    TENCENT_SECRETID     腾讯云平台Id
#    TENCENT_SECRETKEY    腾讯云平台Key
#    TENCENT_INSTANCEID   腾讯云轻量服务器实例ID

name: build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      imageName: note
      imageTag: latest
      containerName: jinhui.dev
    steps:
      - name: 拉取最新代码
        uses: actions/checkout@v3

      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: 安装Python依赖
        run: pip install -r requirements.txt

      - name: 添加防火墙白名单
        run: |
          python3 scripts/firewall.py lighthouse add \
                 --secret-id   ${{ secrets.TENCENT_SECRETID }}   \
                 --secret-key  ${{ secrets.TENCENT_SECRETKEY }}  \
                 --instance-id ${{ secrets.TENCENT_INSTANCEID }} \
                 --region     ap-hongkong                        \
                 --port       ${{ secrets.PORT }}                \
                 --protocol   TCP                                \
                 --source     CurrentIP                          \
                 --action     ACCEPT                             \
                 --description "$(echo -n Github Action: `git rev-parse --short HEAD`)"

      - name: 构建镜像并导出
        run: |
          docker image build . --file Dockerfile --tag ${imageName}:${imageTag}
          docker image save ${imageName}:${imageTag} | gzip -6 > ${imageName}-${imageTag}.gz

      # https://github.com/marketplace/actions/scp-command-to-transfer-files
      - name: 拷贝镜像到服务器
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          #key: ${{ secrets.PRIVATEKEY }}
          timeout: 600s
          source: ${{ env.imageName }}-${{ env.imageTag }}.gz
          target: /tmp/

      # https://github.com/marketplace/actions/ssh-remote-commands
      - name: 服务器导入镜像
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          #key: ${{ secrets.PRIVATEKEY }}
          script: |
            docker image load -i /tmp/${{ env.imageName }}-${{ env.imageTag }}.gz

      - name: 服务器重启容器
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          #key: ${{ secrets.PRIVATEKEY }}
          script: |
            docker container inspect ${{ env.containerName }} &>/dev/null && docker container rm -f ${{ env.containerName }}
            # docker container run --name ${{ env.containerName }} -p80:80 -p443:443 --restart always --cpus 1.0 --memory 1g -d ${{ env.imageName }}:${{ env.imageTag }}
            docker container run --name ${{ env.containerName }}   -p6666:443 --restart always --cpus 1.0 --memory 1g -d ${{ env.imageName }}:${{ env.imageTag }}

      - name: 服务器清理资源
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          #key: ${{ secrets.PRIVATEKEY }}
          script: |
            rm -vf /tmp/${{ env.imageName }}-${{ env.imageTag }}.gz
            docker image prune -f

      # 去掉源地址参数 --source CurrentIP
      #   (1) 防止本地外网出口IP发生变化导致删除白名单失败
      #   (2) 减少不必要的查询外网出口IP请求
      - name: 删除防火墙白名单
        run: |
          python3 scripts/firewall.py lighthouse remove \
                 --secret-id   ${{ secrets.TENCENT_SECRETID }}   \
                 --secret-key  ${{ secrets.TENCENT_SECRETKEY }}  \
                 --instance-id ${{ secrets.TENCENT_INSTANCEID }} \
                 --region     ap-hongkong                        \
                 --port       ${{ secrets.PORT }}                \
                 --protocol   TCP                                \
                 --action     ACCEPT                             \
                 --description "$(echo -n Github Action: `git rev-parse --short HEAD`)"